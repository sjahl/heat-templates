heat_template_version: 2013-05-23

description: Template for launching a 3-node Ceph cluster

parameters:
  key_name:
    type: string
    description: My key-pair
    default: Default
  image_name:
    type: string
    description: Name of Image to be used
  instance_type:
    type: string
    description: Flavor to be used
    default: m1.2core
  volume_size:
    type: number
    description: Size of the volume to be created
    default: 7
    constraints:
      - range: { min: 1, max: 20 }
        description: must be between 1 and 20 GBs
  net_id:
    type: string
    description: ID of Neutron network into which servers get deployed
  security_groups:
    type: comma_delimited_list
    description: Security groups you want applied to the instance
    default: default
    
resources:
  instance_one:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: key_name }
      image: { get_param: image_name }
      flavor: { get_param: instance_type }
      networks:
        - port: { get_resource: instance_one_port }

  instance_two:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: key_name }
      image: { get_param: image_name }
      flavor: { get_param: instance_type }
      networks:
        - port: { get_resource: instance_two_port }

  instance_three:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: key_name }
      image: { get_param: image_name }
      flavor: { get_param: instance_type }
      networks:
        - port: { get_resource: instance_three_port }

  cinder_volume_one:
    type: OS::Cinder::Volume
    properties:
      size: { get_param: volume_size }
  
  volume_attachment_one:
    type: OS::Cinder::VolumeAttachment
    properties:
      volume_id: { get_resource: cinder_volume_one }
      instance_uuid: { get_resource: instance_one }
      mountpoint: /dev/vdc
  
  cinder_volume_two:
    type: OS::Cinder::Volume
    properties:
      size: { get_param: volume_size }
  
  volume_attachment_two:
    type: OS::Cinder::VolumeAttachment
    properties:
      volume_id: { get_resource: cinder_volume_two }
      instance_uuid: { get_resource: instance_two }
      mountpoint: /dev/vdc
  
  cinder_volume_three:
    type: OS::Cinder::Volume
    properties:
      size: { get_param: volume_size }
  
  volume_attachment_three:
    type: OS::Cinder::VolumeAttachment
    properties:
      volume_id: { get_resource: cinder_volume_three }
      instance_uuid: { get_resource: instance_three }
      mountpoint: /dev/vdc
  
  instance_one_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: net_id }
      security_groups: { get_param: security_groups }

  instance_two_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: net_id }
      security_groups: { get_param: security_groups }

  instance_three_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: net_id }
      security_groups: { get_param: security_groups }

outputs:
  instance_one_networks:
    description: The IP of instance_one
    value: { get_attr: [instance_one, networks] }
  instance_two_networks:
    description: The IP of instance_two
    value: { get_attr: [instance_two, networks] }
  instance_three_networks:
    description: The IP of instance_three
    value: { get_attr: [instance_three, networks] }